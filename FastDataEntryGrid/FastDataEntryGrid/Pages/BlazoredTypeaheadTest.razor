@using Blazored.Typeahead

<h3>BlazoredTypeaheadTest</h3>


<BlazoredTypeahead SearchMethod="SearchFilms" @bind-Value="SelectedFilm1" Debounce="5">
    <SelectedTemplate>
        @context.Title
    </SelectedTemplate>
    <ResultTemplate>
        @context.Title (@context.Year)
    </ResultTemplate>
</BlazoredTypeahead>
<br />
<BlazoredTypeahead SearchMethod="SearchFilms" @bind-Value="SelectedFilm2" Debounce="5">
    <SelectedTemplate>
        @context.Title
    </SelectedTemplate>
    <ResultTemplate>
        @context.Title (@context.Year)
    </ResultTemplate>
</BlazoredTypeahead>
<br />
<BlazoredTypeahead SearchMethod="SearchFilms" @bind-Value="SelectedFilm3" Debounce="5">
    <SelectedTemplate>
        @context.Title
    </SelectedTemplate>
    <ResultTemplate>
        @context.Title (@context.Year)
    </ResultTemplate>
</BlazoredTypeahead>

<br />

<BlazoredTypeahead SearchMethod="GetPeopleLocal"
                   ConvertMethod="ConvertPerson"
                   @bind-Value="SelectedPersonId">
    <SelectedTemplate Context="personId">
        @{
            var selectedPerson = People.FirstOrDefault(p => p.Id == personId);
            <text>@selectedPerson?.Firstname @selectedPerson?.Lastname</text>
        }
    </SelectedTemplate>
    <ResultTemplate Context="person">
        @person.Firstname @person.Lastname (Id: @person.Id)
    </ResultTemplate>
</BlazoredTypeahead>


@code {
    public int? SelectedPersonId { get; set; }

    public Film SelectedFilm1 { get; set; }
    public Film SelectedFilm2 { get; set; }
    public Film SelectedFilm3 { get; set; }

    [Parameter]
    public List<Film> Films { get; set; } = new List<Film>();

    private List<Person> People = new List<Person>();

    private async Task<IEnumerable<Film>> SearchFilms(string searchText)
    {
        return await Task.FromResult(Films.Where(x => x.Title.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Person>> GetPeopleLocal(string searchText)
    {
        return await Task.FromResult(People.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower())).ToList());
    }



    protected override void OnInitialized()
    {
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"first title {2000 + n}", Year = 2000 + n });
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"second title {2000 + n}", Year = 2000 + n });
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"third title {2000 + n}", Year = 2000 + n });
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"fourth title {2000 + n}", Year = 2000 + n });
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"fifth title {2000 + n}", Year = 2000 + n });
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"sixth title {2000 + n}", Year = 2000 + n });
        for (int n = 1; n < 6; n++) Films.Add(new Film() { Title = $"seventh title {2000 + n}", Year = 2000 + n });

        People = new List<Person>();
        var counter = 1;
        People.Add(new Person() { Id = counter++, Firstname = "Martelle", Lastname = "Cullon" });
        People.Add(new Person() { Id = counter++, Firstname = "Z10elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z21elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z32elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z43elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z54elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z65elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z76elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z87elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z98elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z09elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z11elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z12elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z13elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z24elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z35elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Z46elda", Lastname = "Abrahamsson" });
        People.Add(new Person() { Id = counter++, Firstname = "Benedetta", Lastname = "Posse" });

    }


    private int? ConvertPerson(Person arg) => arg.Id;


}